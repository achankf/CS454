\begin{enumerate}[1]
\item
Since virtual terminal (I am thinking of running Bash via SSH) is about transferring input and output between 2 machines, no data loss is acceptable.
TCP guarantees reliable transport, whereas UDP doesn't, so TCP is the clear choice.
To achieve reliable transport for UDP requires ``reinventing the wheel," which is difficult to get right.
However, since UDP headers are smaller than TCP headers and UDP has minimal guarantees (i.e. less overhead than TCP), if the logic is done correctly, the system may benefit from lower overhead and bandwidth.
\item
For ease of coding I would choose TCP again, with the same reasoning above.
Though, for specialized file transfer systems (like BitTorrent), I would choose UDP, because UDP has lower overhead and UDP doesn't slow down due to packet loss, unlike TCP.
The protocol headers adds up for large files, so having a smaller header format can save lots of bandwidths.
Also, the file transfer system may want to have its own method of controlling the rate at which packets are sent, like speed throttling in BitTorrent, so TCP's congestion/flow control guarantees may hinder the system.
\item
In this case, I would choose UDP.
Since a private network, according to the Wiki, can have more than $2^{16}$ IP addresses but there are only $2^{16}$ port numbers.
Thus, it's possible that a system that runs on TCP cannot establish a connection, since each connection takes up a port.
On the other hand, for UDP only the receiver needs to open a port for listening requests, so the sender can ask as many machines as possible -- though I might want to control the number of concurrent requests.
\item
It depends on the kind of information.
If the file consists of text, like HTML, then I would use TCP, for simplicity due to its guarantees.
On the other hand, if the user can tolerate losses and file size are large or the user requires real-time guarantees, like audio and video, then I would use UDP, due to minimal overhead which provides flexibility to implement the requirements.
If the system need to show both text and video (like Youtube), I would use both TCP and UDP, with the reasons above.
\item
It depends on the kind of procedure calls and the kind of data that are being transferred.
Similar to previous question, I would use TCP for simplicity, and I would use UDP if TCP's guarantees are not needed or if performance is critical.
\end{enumerate}
